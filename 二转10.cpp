//题目描述
//将一个二进制数，转换为对应的十进制数。
//
//输入
//
//输入一个只含有’0’和’1’的字符串，以回车结束，表示一个二进制数。该二进制数无符号位，长度不超过31。
//
//
//输出
//输出一个整数，为该二进制数对应的十进制数。
//
//样例输入 Copy
//100000000001
//样例输出 Copy
//2049
//提示
//(1) 整数运算尽量避免pow之类的double类型函数，以免截断取整带来错误。(2)可使用递推思想，充分利用中间结果。类似思想可参考秦九韶算法。秦九韶算法是中国南宋时期的数学家秦九韶提出的一种多项式简化算法。计算一次多项式f(x) = a0 * xn + a1 * x(n - 1) + ... + an 只需要n次乘法和n次加法。原理是一次多项式f(x)可写成如下加括号方式：f(x) = (((a0 * x + a1) * x + a2) * x + ... an - 1) * x + an。自内向外去括号计算，只需要n次乘法和n次加法。
//本题从高位到低位依次输出二进制数，对应多项式系数a0, a1, ....，an, 而x的值为2。递推过程如下：
//d = 0;
//while (ch = getchar(), ch != '\n')
//d = d * 2 + (ch - '0');
//#include <stdio.h>
//
//int main() {
//    int ch;
//    int d = 0;
//    while ((ch = getchar()) != '\n') {
//        d = d * 2 + (ch - '0'); 
//    }
//
//    printf("%d\n", d);  
//    return 0;
//}
